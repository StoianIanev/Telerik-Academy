@model MoviesApp.Models.Movie
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Create new movie</h2>
<br />
<div class="container">
    @using (Html.BeginForm("SaveData", "Movie", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary()
        <div>
            @Html.LabelFor(m => m.Title, new { @class = "control-label" })<sup>*</sup>
            @Html.EditorFor(m => m.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Title, null, new { @class = "help-inline" })
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.Director, new { @class = "control-label" })
            @Html.EditorFor(m => m.Director, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Director, null, new { @class = "help-inline" })
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.Studio, new { @class = "control-label" })
            @Html.EditorFor(m => m.Studio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Studio, null, new { @class = "help-inline" })
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.StudioAddress, new { @class = "control-label" })
            @Html.EditorFor(m => m.StudioAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.StudioAddress, null, new { @class = "help-inline" })
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.Year, new { @class = "control-label" })<sup>*</sup>
            @Html.EditorFor(m => m.Year, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Year, null, new { @class = "help-inline" })
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.LeadingMaleRole.Name, new { @class = "control-label" }) <b>on male</b><sup>*</sup>
            @Html.EditorFor(m => m.LeadingMaleRole.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.LeadingMaleRole.Name, null, new { @class = "help-inline" })
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.LeadingMaleRole.Age, new { @class = "control-label" }) <b>on male</b><sup>*</sup>
            @Html.EditorFor(m => m.LeadingMaleRole.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.LeadingMaleRole.Age, null, new { @class = "help-inline" })
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.LeadingFemaleRole.Name, new { @class = "control-label" }) <b>on female</b><sup>*</sup>
            @Html.EditorFor(m => m.LeadingFemaleRole.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.LeadingFemaleRole.Name, null, new { @class = "help-inline" })
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.LeadingFemaleRole.Age, new { @class = "control-label" }) <b>on female</b><sup>*</sup>
            @Html.EditorFor(m => m.LeadingFemaleRole.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.LeadingFemaleRole.Age, null, new { @class = "help-inline" })
        </div>
        <br />
        <div>
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    }
</div>
<br />
<br />
<div>
    @Html.ActionLink("Back to List", "Index", "", new { @class = "btn btn-primary" })
</div>